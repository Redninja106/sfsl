using System.Numerics;

interface IShape 
{
	static this Create()
	{
		
	}
}

struct Sphere : IShape
{
	public Vector3 center;
	public float radius;

	public Sphere(Vector3 center, float radius)
	{
		this.center = center;
		this.radius = radius;
	}
	
	public float Sdf(Vector3 pt)
	{
		return (pt - center).Length() - radius;
	}
}

in Vector2 pos;

out Vector4 position;

public void Main()
{
	IShape position;

	position = new Vector4(pos.x, pos.y, 0, 1);
}

private void HitShape<IShape T>(T shape)
{
	var dist = shape.Sdf(new(0, 0, 0));
}

private void 

/////////////////////////////////////////////////

using System.Numerics;

public void Main(in Vector2 pos, out Vector4 position)
{
	position = new Vector4(pos, 0, 1);
}

/////////////////////////////////////////////////

using System.Numerics;

public Vector4 Main(Vector2 pos)
{
	position = new Vector4(pos, 0, 1);
}